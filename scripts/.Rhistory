)
residual_model <- lm(
data = mdl_data,
log_close ~ time
)
summary(residual_model)
aug_residual_model <- augment(
x = residual_model
)
aug_residual_model %>%
ggplot(aes(
time, .std.resid
)) +
geom_line() +
scale_y_continuous(
limits = c(-7, 3)
)
mdl_data <- btc_data %>%
mutate(
log_close = log(close),
time = scales::rescale(as.numeric(timestamp)),
quarter = as.factor(lubridate::quarter(timestamp))
)
residual_model <- lm(
data = mdl_data,
log_close ~ time * quarter
)
summary(residual_model)
aug_residual_model <- augment(
x = residual_model
)
aug_residual_model %>%
ggplot(aes(
time, .std.resid
)) +
geom_line() +
scale_y_continuous(
limits = c(-7, 3)
)
aug_residual_model <- augment(
x = residual_model
)
aug_residual_model %>%
ggplot(aes(
time, .std.resid
)) +
geom_line() +
scale_y_continuous(
limits = c(-7, 3)
)
summary(residual_model)
aug_residual_model
aug_residual_model %>%
ggplot(aes(
time, .fitted
)) +
geom_line(aes(color = quarter))
aug_residual_model %>%
ggplot(aes(
quarter, .std.resid
)) +
geom_boxplot()
aug_residual_model %>%
ggplot(aes(
quarter, .cooksd
)) +
geom_boxplot()
aug_residual_model %>%
ggplot(aes(
quarter, .cooksd
)) +
stat_summary(
fun.data = "mean_se",
geom = "pointrange"
)
mdl_data <- btc_data %>%
mutate(
log_close = log(close),
time = scales::rescale(as.numeric(timestamp)),
quarter = as.factor(lubridate::quarter(timestamp)),
yeat = as.factor(lubridate::year(timestamp))
)
mdl_data <- btc_data %>%
mutate(
log_close = log(close),
time = scales::rescale(as.numeric(timestamp)),
quarter = as.factor(lubridate::quarter(timestamp)),
year = as.factor(lubridate::year(timestamp))
)
residual_model <- lm(
data = mdl_data,
log_close ~ time * quarter * year
)
summary(residual_model)
aug_residual_model <- augment(
x = residual_model
)
aug_residual_model %>%
ggplot(aes(
quarter, .cooksd
)) +
stat_summary(
fun.data = "mean_se",
geom = "pointrange"
)
aug_residual_model %>%
ggplot(aes(
quarter, .cooksd
)) +
stat_summary(
fun.data = "mean_se",
geom = "pointrange"
) +
facet_wrap(~year)
aug_residual_model %>%
ggplot(aes(
quarter, .cooksd
)) +
stat_summary(
fun.data = "mean_se",
geom = "pointrange"
) +
facet_wrap(~year, scales = "free")
summary(residual_model)
mdl_data <- btc_data %>%
mutate(
log_close = log(close),
time = scales::rescale(as.numeric(timestamp)),
quarter = as.factor(lubridate::quarter(timestamp))
)
residual_model <- lm(
data = mdl_data,
log_close ~ time * quarter
)
summary(residual_model)
aug_residual_model <- augment(
x = residual_model
)
residual_model <- lm(
data = mdl_data,
log_close ~ time * quarter
)
summary(residual_model)
mdl1 <- lm(
data = mdl_data,
log_close ~ time
)
mdl0 <- lm(
data = mdl_data,
log_close ~ 1
)
mdl1 <- lm(
data = mdl_data,
log_close ~ time
)
mdl2 <- lm(
data = mdl_data,
log_close ~ time * quarter
)
anova(mdl0, mdl1)
anova(mdl1, mdl2)
mdl2 <- lm(
data = mdl_data,
log_close ~ time * quarter
)
mdl3 <- lm(
data = mdl_data,
log_close ~ time * I(time^2) * quarter
)
anova(mdl0, mdl1)
anova(mdl1, mdl2)
anova(mdl2, mdl3)
mdl_data <- btc_data %>%
mutate(
month = lubridate::month(timestamp)
) %>%
group_by(month) %>%
mutate(
t = scales::rescale(timestamp, to = c(0, 1))
) %>%
summarise(
close_sd = sd(close),
linear_trend = coef(lm(close ~ t))
)
coef(mdl1)
coef(mdl1)[2]
mdl_data <- btc_data %>%
mutate(
month = lubridate::month(timestamp)
) %>%
group_by(month) %>%
mutate(
t = scales::rescale(timestamp, to = c(0, 1))
) %>%
summarise(
close_sd = sd(close),
linear_trend = coef(lm(close ~ t))[2]
)
mdl_data
mdl_data <- btc_data %>%
mutate(
month = lubridate::month(timestamp),
year = lubridate::year(timestamp)
) %>%
group_by(year, month) %>%
mutate(
t = scales::rescale(timestamp, to = c(0, 1))
) %>%
summarise(
close_sd = sd(close),
linear_trend = coef(lm(close ~ t))[2]
)
mdl_data
mdl_data <- btc_data %>%
mutate(
month = lubridate::month(timestamp),
year = lubridate::year(timestamp),
log_close = log(close)
) %>%
group_by(year, month) %>%
mutate(
t = scales::rescale(timestamp, to = c(0, 1))
) %>%
summarise(
close_sd = sd(close),
linear_trend = coef(lm(log_close ~ t))[2]
)
mdl_data <- btc_data %>%
mutate(
month = lubridate::month(timestamp),
year = lubridate::year(timestamp),
log_close = log(close)
) %>%
group_by(year, month) %>%
mutate(
t = scales::rescale(timestamp, to = c(0, 1))
) %>%
summarise(
close_sd = sd(close),
linear_trend = coef(lm(log_close ~ t))[2]
)
mdl_data
sigma(mdl1)
mdl_data <- btc_data %>%
mutate(
month = lubridate::month(timestamp),
year = lubridate::year(timestamp),
log_close = log(close)
) %>%
group_by(year, month) %>%
mutate(
t = scales::rescale(timestamp, to = c(0, 1))
) %>%
summarise(
linear_trend = coef(lm(log_close ~ t))[2],
sigma = sigma(lm(log_close ~ t))
)
mdl_data
mdl_data <- btc_data %>%
mutate(
month = as.factor(lubridate::month(timestamp)),
year = as.factor(lubridate::year(timestamp)),
log_close = log(close)
) %>%
group_by(year, month) %>%
mutate(
t = scales::rescale(timestamp, to = c(0, 1))
) %>%
summarise(
linear_trend = coef(lm(log_close ~ t))[2],
sigma = sigma(lm(log_close ~ t))
)
mdl_data
mdl_data %>%
ggplot(aes(
month, linear_trend
)) +
geom_point()
mdl_data %>%
ggplot(aes(
month, linear_trend
)) +
stat_summary(
fun.data = "mean_se",
geom = "pointrange"
)
mdl_data %>%
ggplot(aes(
month, linear_trend
)) +
stat_summary(
fun.data = "mean_se",
geom = "pointrange"
) +
geom_hline(yintercept = 0)
mdl_data %>%
ggplot(aes(
month, sigma
)) +
stat_summary(
fun.data = "mean_se",
geom = "pointrange"
) +
geom_hline(yintercept = 0)
mdl_data %>%
ggplot(aes(
month, linear_trend
)) +
stat_summary(
fun.data = "mean_se",
geom = "pointrange"
) +
geom_hline(yintercept = 0)
mdl_data
mdl1 <- lmerTest::lmer(
data = mdl_data,
linear_trend ~ month + (1 | year)
)
summary(mdl1)
mdl1 <- lmerTest::lmer(
data = mdl_data,
linear_trend ~ month * sigma + (1 | year)
)
summary(mdl1)
mdl1 <- lmerTest::lmer(
data = mdl_data,
linear_trend ~ month + (1 | year)
)
summary(mdl1)
mdl_data <- btc_data %>%
mutate(
month = as.factor(lubridate::month(timestamp)),
year = as.factor(lubridate::year(timestamp)),
log_close = log(close)
) %>%
group_by(year, month) %>%
mutate(
t = scales::rescale(timestamp, to = c(0, 1))
) %>%
summarise(
empiric_delta = (tail(close, n = 1) - head(close, n = 1))/head(close, n = 1),
linear_trend = coef(lm(log_close ~ t))[2],
sigma = sigma(lm(log_close ~ t))
)
mdl_data
mdl1 <- lmerTest::lmer(
data = mdl_data,
empiric_delta ~ month + (1 | year)
)
summary(mdl1)
mdl1 <- lmerTest::lmer(
data = mdl_data,
empiric_delta ~ month + t + (1 | year)
)
mdl_data <- btc_data %>%
mutate(
month = as.factor(lubridate::month(timestamp)),
year = as.factor(lubridate::year(timestamp)),
log_close = log(close)
) %>%
group_by(year, month) %>%
mutate(
t = scales::rescale(timestamp, to = c(0, 1))
) %>%
summarise(
t = mean(t),
empiric_delta = (tail(close, n = 1) - head(close, n = 1)) / head(close, n = 1),
linear_trend = coef(lm(log_close ~ t))[2],
sigma = sigma(lm(log_close ~ t))
)
mdl_data <- btc_data %>%
mutate(
month = as.factor(lubridate::month(timestamp)),
year = as.factor(lubridate::year(timestamp)),
log_close = log(close),
overall_t = scales::rescale(timestamp, to = c(0, 1))
) %>%
group_by(year, month) %>%
mutate(
t = scales::rescale(timestamp, to = c(0, 1))
) %>%
summarise(
overall_t = mean(overall_t),
empiric_delta = (tail(close, n = 1) - head(close, n = 1)) / head(close, n = 1),
linear_trend = coef(lm(log_close ~ t))[2],
sigma = sigma(lm(log_close ~ t))
)
mdl_data
mdl1 <- lmerTest::lmer(
data = mdl_data,
empiric_delta ~ month + overall_t + (1 | year)
)
summary(mdl1)
mdl1 <- lmerTest::lmer(
data = mdl_data,
empiric_delta ~ month * overall_t + (1 | year)
)
summary(mdl1)
btc_data %>%
mutate(
month = lubridate::month(timestamp)
)
btc_data %>%
mutate(
month = lubridate::month(timestamp)
) %>%
filter(month == 10)
btc_data %>%
mutate(
month = lubridate::month(timestamp)
) %>%
filter(month == 10) %>%
ggplot(aes(
timestamp, log(close)
)) +
geom_line()
btc_data %>%
mutate(
month = lubridate::month(timestamp)
) %>%
filter(month == 10) %>%
ggplot(aes(
timestamp, log(close)
)) +
geom_line() +
geom_smooth(method = "lm")
btc_data %>%
mutate(
month = lubridate::month(timestamp)
) %>%
filter(month == 4) %>%
ggplot(aes(
timestamp, log(close)
)) +
geom_line() +
geom_smooth(method = "lm")
mdl_data <- btc_data %>%
mutate(
log_close = log(close),
t = scales::rescale(timestamp, to = c(0, 1))
)
mdl_data
mdl_open <- lm(
data = mdl_data,
log_close ~ t
)
summary(mdl_open)
mdl_data <- btc_data %>%
mutate(
log_open = log(open),
log_close = log(close),
log_high = log(high),
log_low = log(low),
t = scales::rescale(timestamp, to = c(0, 1))
)
mdl_data
mdl_open <- lm(
data = mdl_data,
log_open ~ t
)
mdl_open <- lm(
data = mdl_data,
log_open ~ t
)
mdl_close <- lm(
data = mdl_data,
log_close ~ t
)
mdl_high <- lm(
data = mdl_data,
log_high ~ t
)
mdl_low <- lm(
data = mdl_data,
log_low ~ t
)
augment(
mdl_open
)
augment(
mdl_open,
mdl_close
)
aug_open <- augment(mdl_open) %>% mutate(type = "open")
aug_open
aug_open <- augment(mdl_open) %>% mutate(type = "open")
aug_close <- augment(mdl_close) %>% mutate(type = "close")
aug_high <- augment(mdl_high) %>% mutate(type = "high")
aug_low <- augment(mdl_low) %>% mutate(type = "low")
aug_data <- bind_rows(
aug_open,
aug_close,
aug_high,
aug_low
)
aug_data
aug_data %>%
ggplot(aes(
t, .std.resid, color = type
)) +
geom_line()
aug_data %>%
ggplot(aes(
t, .std.resid,
color = type
)) +
geom_point()
sigma(mdl_open)
sigma(mdl_open)
sigma(mdl_close)
sigma(mdl_high)
sigma(mdl_low)
